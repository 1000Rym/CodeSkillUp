import re
import reprlib

RE_WORD = re.compile('\w+')

class Sentence:
    def __init__(self, text):
        self.text = text
        self.words = RE_WORD.findall(text)
    
    def __getitem__(self, index):
        return self.words[index]

    def __len__(self):
        return len(self.words)
    
    def __repr__(self):
        """
        Not the output out __repr__ using ... generated by reprlib.repr
        """
        return 'Sentence(%s)' % reprlib.repr(self.text)

class SentenceIterator:

    def __init__(self, words):
        self.words = words
        self.index = 0

    def __next__(self):
        """
        Implement next built-in method
        """
        try :
            word = self.words[self.index]
        except IndexError:
            raise StopIteration()
        self.index += 1
        return word

    def __iter__(self):
        return self

if __name__ == '__main__':
    sentence = Sentence("Hello, This is ben speacking!")
    print("repr: %s" % sentence)
    print(list(sentence))
    print("sentence[-1] is %s" % sentence[-1])

    sentence = SentenceIterator(["Hello","This", "is", "ben" "speacking!"])
    print("repr: %s" % sentence)
    print(list(sentence))
    #print("sentence[-1] is %s" % sentence[-1])

